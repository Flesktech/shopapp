{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hambolu/shop/component/Settings.js\";\n\nimport React, { useState } from 'react';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport firebase from \"../database/firebase\";\nimport DrawerScreen from \"./DrawerScreen\";\nimport { Switch } from 'react-native-paper';\n\nvar App = function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.setContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      paddingRight: 140\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Notification\"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#767577\",\n      true: \"#81b0ff\"\n    },\n    thumbColor: isEnabled ? \"#f5dd4b\" : \"#f4f3f4\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    value: isEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.setContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      paddingRight: 140\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Notification\"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#767577\",\n      true: \"#81b0ff\"\n    },\n    thumbColor: isEnabled ? \"#f5dd4b\" : \"#f4f3f4\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    value: isEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.setContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      paddingRight: 140\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Notification\"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#767577\",\n      true: \"#81b0ff\"\n    },\n    thumbColor: isEnabled ? \"#f5dd4b\" : \"#f4f3f4\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    value: isEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    flexDirection: \"column\"\n  },\n  setContainer: {\n    flexDirection: \"row\"\n  }\n});\nexport default App;","map":{"version":3,"sources":["/home/hambolu/shop/component/Settings.js"],"names":["React","useState","Icon","ScrollView","TouchableOpacity","firebase","DrawerScreen","Switch","App","isEnabled","setIsEnabled","toggleSwitch","previousState","styles","container","setContainer","paddingRight","false","true","StyleSheet","create","flex","padding","flexDirection"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { View, Text, Image, ImageBackground, Linking, Platform, StyleSheet } from \"react-native\";\nimport firebase from '../database/firebase';\nimport DrawerScreen from './DrawerScreen';\nimport { Switch } from 'react-native-paper';\n\n\nconst App = () => {\n    const [isEnabled, setIsEnabled] = useState(false);\n    const toggleSwitch = () => setIsEnabled(previousState => !previousState);\n  \n    return (\n      <View style={styles.container}>\n          <View style={styles.setContainer}>\n            <Text style={{paddingRight:140}}>Notification</Text>\n            <Switch\n            trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n            thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={toggleSwitch}\n            value={isEnabled}\n            />\n          </View>\n          <View style={styles.setContainer}>\n            <Text style={{paddingRight:140}}>Notification</Text>\n            <Switch\n            trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n            thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={toggleSwitch}\n            value={isEnabled}\n            />\n          </View>\n          <View style={styles.setContainer}>\n            <Text style={{paddingRight:140}}>Notification</Text>\n            <Switch\n            trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n            thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={toggleSwitch}\n            value={isEnabled}\n            />\n          </View>\n      </View>\n      \n    );\n  }\nconst styles = StyleSheet.create({\ncontainer:{\n    flex:1,\n  padding:20,\n  flexDirection:\"column\"\n},\nsetContainer:{\n  flexDirection:\"row\"\n}\n})\n\nexport default App;"]},"metadata":{},"sourceType":"module"}