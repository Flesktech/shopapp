{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/hambolu/shop/node_modules/react-native-material-design/lib/Drawer/Section.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, PropTypes } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Icon from \"../Icon\";\nimport Ripple from \"../polyfill/Ripple\";\nimport { TYPO } from \"../config\";\nimport { isCompatible } from \"../helpers\";\n\nvar Section = function (_Component) {\n  _inherits(Section, _Component);\n\n  var _super = _createSuper(Section);\n\n  function Section() {\n    var _this;\n\n    _classCallCheck(this, Section);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderRow = function (item, index, color) {\n      return React.createElement(View, {\n        key: index,\n        style: styles.item,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, item.icon && React.createElement(Icon, {\n        name: item.icon,\n        color: color,\n        size: 22,\n        style: styles.icon,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: styles.value,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [TYPO.paperFontBody2, {\n          color: color\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, item.value)), item.label && React.createElement(View, {\n        style: styles.label,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: [TYPO.paperFontBody2, {\n          color: color\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, item.label)));\n    };\n\n    return _this;\n  }\n\n  _createClass(Section, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          title = _this$props.title,\n          items = _this$props.items;\n      var textStyleMap = {\n        light: {\n          'default': 'rgba(0,0,0,.87)',\n          disabled: 'rgba(0,0,0,.38)'\n        },\n        dark: {\n          'default': '#ffffff',\n          disabled: 'rgba(255,255,255,.30)'\n        }\n      };\n      var subheaderStyleMap = {\n        light: 'rgba(0,0,0,.54)',\n        dark: 'rgba(255,255,255,.70)'\n      };\n      var activeStyleMap = {\n        light: '#f5f5f5',\n        dark: '#212121'\n      };\n      var TEXT_COLOR = textStyleMap[theme]['default'];\n      var SUB_TEXT_COLOR = subheaderStyleMap[theme];\n      var ACTIVE_COLOR = activeStyleMap[theme];\n      return React.createElement(View, {\n        style: styles.section,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, title && React.createElement(View, {\n        style: [styles.subheader, styles.item],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: [TYPO.paperFontBody2, {\n          color: SUB_TEXT_COLOR\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, title)), items && items.map(function (item, i) {\n        if (item.disabled) {\n          return _this2.renderRow(item, i, textStyleMap[theme]['disabled']);\n        }\n\n        if (!isCompatible('TouchableNativeFeedback')) {\n          return React.createElement(Ripple, {\n            key: i,\n            rippleColor: \"rgba(153,153,153,.4)\",\n            onPress: item.onPress,\n            onLongPress: item.onLongPress,\n            style: {\n              flex: 1,\n              flexDirection: 'row',\n              backgroundColor: item.active ? ACTIVE_COLOR : null\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }\n          }, _this2.renderRow(item, i, TEXT_COLOR));\n        }\n\n        return React.createElement(TouchableNativeFeedback, {\n          key: i,\n          background: TouchableNativeFeedback.Ripple('rgba(153,153,153,.4)'),\n          onPress: item.onPress,\n          onLongPress: item.onLongPress,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: item.active ? {\n            backgroundColor: ACTIVE_COLOR\n          } : {},\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }\n        }, _this2.renderRow(item, i, TEXT_COLOR)));\n      }));\n    }\n  }]);\n\n  return Section;\n}(Component);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    icon: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    label: PropTypes.string,\n    onPress: PropTypes.func,\n    onLongPress: PropTypes.func,\n    active: PropTypes.bool,\n    disabled: PropTypes.bool\n  }))\n};\nexport { Section as default };\nvar styles = {\n  section: {\n    flex: 1,\n    marginTop: 8\n  },\n  item: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 48,\n    paddingLeft: 16\n  },\n  subheader: {\n    flex: 1\n  },\n  icon: {\n    position: 'absolute',\n    top: 13\n  },\n  value: {\n    flex: 1,\n    paddingLeft: 56,\n    top: 2\n  },\n  label: {\n    paddingRight: 16,\n    top: 2\n  }\n};","map":{"version":3,"sources":["/home/hambolu/shop/node_modules/react-native-material-design/lib/Drawer/Section.js"],"names":["React","Component","PropTypes","Icon","Ripple","TYPO","isCompatible","Section","renderRow","item","index","color","styles","icon","value","paperFontBody2","label","props","theme","title","items","textStyleMap","light","disabled","dark","subheaderStyleMap","activeStyleMap","TEXT_COLOR","SUB_TEXT_COLOR","ACTIVE_COLOR","section","subheader","map","i","onPress","onLongPress","flex","flexDirection","backgroundColor","active","TouchableNativeFeedback","propTypes","string","arrayOf","shape","isRequired","func","bool","marginTop","alignItems","height","paddingLeft","position","top","paddingRight"],"mappings":"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","sourcesContent":["import React, {Component, PropTypes} from \"react\";\nimport {View, Text, TouchableNativeFeedback} from \"react-native\";\nimport Icon from '../Icon';\nimport Ripple from '../polyfill/Ripple';\nimport { TYPO } from '../config';\nimport { isCompatible } from '../helpers';\n\nexport default class Section extends Component {\n\n    static propTypes = {\n        title: PropTypes.string,\n        items: PropTypes.arrayOf(PropTypes.shape({\n            icon: PropTypes.string,\n            value: PropTypes.string.isRequired,\n            label: PropTypes.string,\n            onPress: PropTypes.func,\n            onLongPress: PropTypes.func,\n            active: PropTypes.bool,\n            disabled: PropTypes.bool\n        }))\n    };\n\n    renderRow = (item, index, color) => {\n        return (\n            <View\n                key={index}\n                style={styles.item}\n            >\n                {item.icon &&\n                    <Icon\n                        name={item.icon}\n                        color={color}\n                        size={22}\n                        style={styles.icon}\n                    />\n                }\n                <View style={styles.value}>\n                    <Text style={[TYPO.paperFontBody2, { color }]}>\n                        {item.value}\n                    </Text>\n                </View>\n                {item.label &&\n                    <View style={styles.label}>\n                        <Text style={[TYPO.paperFontBody2, { color }]}>\n                            {item.label}\n                        </Text>\n                    </View>\n                }\n            </View>\n        );\n    };\n\n    render() {\n        const { theme, title, items } = this.props;\n\n        const textStyleMap = {\n            light: {\n                'default': 'rgba(0,0,0,.87)',\n                disabled: 'rgba(0,0,0,.38)'\n            },\n            dark: {\n                'default': '#ffffff',\n                disabled: 'rgba(255,255,255,.30)'\n            }\n        };\n\n        const subheaderStyleMap = {\n            light: 'rgba(0,0,0,.54)',\n            dark: 'rgba(255,255,255,.70)',\n        };\n\n        const activeStyleMap = {\n            light: '#f5f5f5',\n            dark: '#212121',\n        };\n\n        const TEXT_COLOR = textStyleMap[theme]['default'];\n        const SUB_TEXT_COLOR = subheaderStyleMap[theme];\n        const ACTIVE_COLOR = activeStyleMap[theme];\n\n        return (\n            <View style={styles.section}>\n                {title &&\n                    <View style={[styles.subheader, styles.item]}>\n                        <Text style={[TYPO.paperFontBody2, { color: SUB_TEXT_COLOR }]}>\n                            {title}\n                        </Text>\n                    </View>\n                }\n                {items && items.map((item, i) => {\n                    if (item.disabled) {\n                        return this.renderRow(item, i, textStyleMap[theme]['disabled']);\n                    }\n\n                    if (!isCompatible('TouchableNativeFeedback')) {\n                        return (\n                            <Ripple\n                                key={i}\n                                rippleColor=\"rgba(153,153,153,.4)\"\n                                onPress={item.onPress}\n                                onLongPress={item.onLongPress}\n                                style={{\n                                    flex: 1,\n                                    flexDirection: 'row',\n                                    backgroundColor: item.active ? ACTIVE_COLOR : null\n                                }}\n                            >\n                                {this.renderRow(item, i, TEXT_COLOR)}\n                            </Ripple>\n                        );\n                    }\n\n                    return (\n                        <TouchableNativeFeedback\n                            key={i}\n                            background={TouchableNativeFeedback.Ripple('rgba(153,153,153,.4)')}\n                            onPress={item.onPress}\n                            onLongPress={item.onLongPress}\n                        >\n                            <View style={item.active ? { backgroundColor: ACTIVE_COLOR } : {}}>\n                                {this.renderRow(item, i, TEXT_COLOR)}\n                            </View>\n                        </TouchableNativeFeedback>\n                    );\n                })}\n            </View>\n        );\n    }\n}\n\nconst styles = {\n    section: {\n        flex: 1,\n        marginTop: 8\n    },\n    item: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        height: 48,\n        paddingLeft: 16\n    },\n    subheader: {\n        flex: 1,\n    },\n    icon: {\n        position: 'absolute',\n        top: 13\n    },\n    value: {\n        flex: 1,\n        paddingLeft: 56,\n        top: 2\n    },\n    label: {\n        paddingRight: 16,\n        top: 2\n    }\n};"]},"metadata":{},"sourceType":"module"}