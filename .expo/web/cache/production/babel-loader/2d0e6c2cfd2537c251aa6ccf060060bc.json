{"ast":null,"code":"import*as React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import Button from\"react-native-web/dist/exports/Button\";import{NavigationContainer,DrawerActions}from'@react-navigation/native';import{createDrawerNavigator,DrawerContentScrollView,DrawerItemList,DrawerItem}from'@react-navigation/drawer';function Feed(_ref){var navigation=_ref.navigation;return React.createElement(View,{style:{flex:1,justifyContent:'center',alignItems:'center'}},React.createElement(Text,null,\"Feed Screen\"),React.createElement(Button,{title:\"Open drawer\",onPress:function onPress(){return navigation.dispatch(DrawerActions.openDrawer());}}),React.createElement(Button,{title:\"Toggle drawer\",onPress:function onPress(){return navigation.dispatch(DrawerActions.toggleDrawer());}}));}function Notifications(){return React.createElement(View,{style:{flex:1,justifyContent:'center',alignItems:'center'}},React.createElement(Text,null,\"Notifications Screen\"));}function CustomDrawerContent(props){return React.createElement(DrawerContentScrollView,props,React.createElement(DrawerItemList,props),React.createElement(DrawerItem,{label:\"Close drawer\",onPress:function onPress(){return props.navigation.dispatch(DrawerActions.closeDrawer());}}),React.createElement(DrawerItem,{label:\"Toggle drawer\",onPress:function onPress(){return props.navigation.dispatch(DrawerActions.toggleDrawer());}}));}var Drawer=createDrawerNavigator();function MyDrawer(){return React.createElement(Drawer.Navigator,{drawerContent:function drawerContent(props){return React.createElement(CustomDrawerContent,props);}},React.createElement(Drawer.Screen,{name:\"Feed\",component:Feed}),React.createElement(Drawer.Screen,{name:\"Notifications\",component:Notifications}));}export default function App(){return React.createElement(NavigationContainer,null,React.createElement(MyDrawer,null));}","map":{"version":3,"sources":["/home/hambolu/Desktop/shop/component/DrawerScreen.js"],"names":["React","NavigationContainer","DrawerActions","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","Feed","navigation","flex","justifyContent","alignItems","dispatch","openDrawer","toggleDrawer","Notifications","CustomDrawerContent","props","closeDrawer","Drawer","MyDrawer","App"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,C,mKAEA,OAASC,mBAAT,CAA8BC,aAA9B,KAAmD,0BAAnD,CACA,OACEC,qBADF,CAEEC,uBAFF,CAGEC,cAHF,CAIEC,UAJF,KAKO,0BALP,CAOA,QAASC,CAAAA,IAAT,MAA8B,IAAdC,CAAAA,UAAc,MAAdA,UAAc,CAC5B,MACE,qBAAC,IAAD,EAAM,KAAK,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAWC,cAAc,CAAE,QAA3B,CAAqCC,UAAU,CAAE,QAAjD,CAAb,EACE,oBAAC,IAAD,oBADF,CAEE,oBAAC,MAAD,EACE,KAAK,CAAC,aADR,CAEE,OAAO,CAAE,yBAAMH,CAAAA,UAAU,CAACI,QAAX,CAAoBV,aAAa,CAACW,UAAd,EAApB,CAAN,EAFX,EAFF,CAME,oBAAC,MAAD,EACE,KAAK,CAAC,eADR,CAEE,OAAO,CAAE,yBAAML,CAAAA,UAAU,CAACI,QAAX,CAAoBV,aAAa,CAACY,YAAd,EAApB,CAAN,EAFX,EANF,CADF,CAaD,CAED,QAASC,CAAAA,aAAT,EAAyB,CACvB,MACE,qBAAC,IAAD,EAAM,KAAK,CAAE,CAAEN,IAAI,CAAE,CAAR,CAAWC,cAAc,CAAE,QAA3B,CAAqCC,UAAU,CAAE,QAAjD,CAAb,EACE,oBAAC,IAAD,6BADF,CADF,CAKD,CAED,QAASK,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAClC,MACE,qBAAC,uBAAD,CAA6BA,KAA7B,CACE,oBAAC,cAAD,CAAoBA,KAApB,CADF,CAEE,oBAAC,UAAD,EACE,KAAK,CAAC,cADR,CAEE,OAAO,CAAE,yBAAMA,CAAAA,KAAK,CAACT,UAAN,CAAiBI,QAAjB,CAA0BV,aAAa,CAACgB,WAAd,EAA1B,CAAN,EAFX,EAFF,CAME,oBAAC,UAAD,EACE,KAAK,CAAC,eADR,CAEE,OAAO,CAAE,yBAAMD,CAAAA,KAAK,CAACT,UAAN,CAAiBI,QAAjB,CAA0BV,aAAa,CAACY,YAAd,EAA1B,CAAN,EAFX,EANF,CADF,CAaD,CAED,GAAMK,CAAAA,MAAM,CAAGhB,qBAAqB,EAApC,CAEA,QAASiB,CAAAA,QAAT,EAAoB,CAClB,MACE,qBAAC,MAAD,CAAQ,SAAR,EAAkB,aAAa,CAAE,uBAAAH,KAAK,QAAI,qBAAC,mBAAD,CAAyBA,KAAzB,CAAJ,EAAtC,EACE,oBAAC,MAAD,CAAQ,MAAR,EAAe,IAAI,CAAC,MAApB,CAA2B,SAAS,CAAEV,IAAtC,EADF,CAEE,oBAAC,MAAD,CAAQ,MAAR,EAAe,IAAI,CAAC,eAApB,CAAoC,SAAS,CAAEQ,aAA/C,EAFF,CADF,CAMD,CAED,cAAe,SAASM,CAAAA,GAAT,EAAe,CAC5B,MACE,qBAAC,mBAAD,MACE,oBAAC,QAAD,MADF,CADF,CAKD","sourcesContent":["import * as React from 'react';\nimport { View, Text, Button } from 'react-native';\nimport { NavigationContainer, DrawerActions } from '@react-navigation/native';\nimport {\n  createDrawerNavigator,\n  DrawerContentScrollView,\n  DrawerItemList,\n  DrawerItem,\n} from '@react-navigation/drawer';\n\nfunction Feed({ navigation }) {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Feed Screen</Text>\n      <Button\n        title=\"Open drawer\"\n        onPress={() => navigation.dispatch(DrawerActions.openDrawer())}\n      />\n      <Button\n        title=\"Toggle drawer\"\n        onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\n      />\n    </View>\n  );\n}\n\nfunction Notifications() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Notifications Screen</Text>\n    </View>\n  );\n}\n\nfunction CustomDrawerContent(props) {\n  return (\n    <DrawerContentScrollView {...props}>\n      <DrawerItemList {...props} />\n      <DrawerItem\n        label=\"Close drawer\"\n        onPress={() => props.navigation.dispatch(DrawerActions.closeDrawer())}\n      />\n      <DrawerItem\n        label=\"Toggle drawer\"\n        onPress={() => props.navigation.dispatch(DrawerActions.toggleDrawer())}\n      />\n    </DrawerContentScrollView>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\n\nfunction MyDrawer() {\n  return (\n    <Drawer.Navigator drawerContent={props => <CustomDrawerContent {...props} />}>\n      <Drawer.Screen name=\"Feed\" component={Feed} />\n      <Drawer.Screen name=\"Notifications\" component={Notifications} />\n    </Drawer.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <MyDrawer />\n    </NavigationContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}