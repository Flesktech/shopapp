{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hambolu/shop/component/Settings.js\";\n\nimport React, { Component } from 'react';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport firebase from \"../database/firebase\";\nimport DrawerScreen from \"./DrawerScreen\";\nimport { Switch } from 'react-native-paper';\n\nvar App = function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, \"Notification\"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#767577\",\n      true: \"#81b0ff\"\n    },\n    thumbColor: isEnabled ? \"#f5dd4b\" : \"#f4f3f4\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    value: isEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingVertical: 50,\n    flexDirection: \"row\"\n  }\n});\nexport default App;","map":{"version":3,"sources":["/home/hambolu/shop/component/Settings.js"],"names":["React","Component","Icon","ScrollView","TouchableOpacity","firebase","DrawerScreen","Switch","App","useState","isEnabled","setIsEnabled","toggleSwitch","previousState","styles","container","false","true","StyleSheet","create","flex","paddingVertical","flexDirection"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,2CAAjB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,8BAA7C;;;;;;;;AAEA,OAAOC,QAAP;AACA,OAAOC,YAAP;AACA,SAASC,MAAT,QAAuB,oBAAvB;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACoBC,QAAQ,CAAC,KAAD,CAD5B;AAAA;AAAA,MACPC,SADO;AAAA,MACIC,YADJ;;AAEd,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMD,YAAY,CAAC,UAAAE,aAAa;AAAA,aAAI,CAACA,aAAL;AAAA,KAAd,CAAlB;AAAA,GAArB;;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE;AAAEC,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KADd;AAEE,IAAA,UAAU,EAAEP,SAAS,GAAG,SAAH,GAAe,SAFtC;AAGE,IAAA,mBAAmB,EAAC,SAHtB;AAIE,IAAA,aAAa,EAAEE,YAJjB;AAKE,IAAA,KAAK,EAAEF,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAYD,CAhBH;;AAiBA,IAAMI,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AACjCJ,EAAAA,SAAS,EAAC;AACNK,IAAAA,IAAI,EAAC,CADC;AAERC,IAAAA,eAAe,EAAC,EAFR;AAGRC,IAAAA,aAAa,EAAC;AAHN;AADuB,CAAlB,CAAf;AAQA,eAAed,GAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { View, Text, Image, ImageBackground, Linking, Platform, StyleSheet } from \"react-native\";\nimport firebase from '../database/firebase';\nimport DrawerScreen from './DrawerScreen';\nimport { Switch } from 'react-native-paper';\n\n\nconst App = () => {\n    const [isEnabled, setIsEnabled] = useState(false);\n    const toggleSwitch = () => setIsEnabled(previousState => !previousState);\n  \n    return (\n      <View style={styles.container}>\n          <Text>Notification</Text>\n        <Switch\n          trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n          thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\n          ios_backgroundColor=\"#3e3e3e\"\n          onValueChange={toggleSwitch}\n          value={isEnabled}\n        />\n      </View>\n    );\n  }\nconst styles = StyleSheet.create({\ncontainer:{\n    flex:1,\n  paddingVertical:50,\n  flexDirection:\"row\"\n},\n})\n\nexport default App;"]},"metadata":{},"sourceType":"module"}