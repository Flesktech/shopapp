{"ast":null,"code":";\n\n(function (root, factory, undef) {\n  if (typeof exports === \"object\") {\n    module.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"./core\", \"./cipher-core\"], factory);\n  } else {\n    factory(root.CryptoJS);\n  }\n})(this, function (CryptoJS) {\n  CryptoJS.pad.AnsiX923 = {\n    pad: function pad(data, blockSize) {\n      var dataSigBytes = data.sigBytes;\n      var blockSizeBytes = blockSize * 4;\n      var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n      var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n      data.clamp();\n      data.words[lastBytePos >>> 2] |= nPaddingBytes << 24 - lastBytePos % 4 * 8;\n      data.sigBytes += nPaddingBytes;\n    },\n    unpad: function unpad(data) {\n      var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;\n      data.sigBytes -= nPaddingBytes;\n    }\n  };\n  return CryptoJS.pad.Ansix923;\n});","map":{"version":3,"sources":["/home/hambolu/Desktop/shop/node_modules/react-native-wc-api/node_modules/crypto-js/pad-ansix923.js"],"names":["root","factory","undef","exports","module","require","define","amd","CryptoJS","pad","AnsiX923","data","blockSize","dataSigBytes","sigBytes","blockSizeBytes","nPaddingBytes","lastBytePos","clamp","words","unpad","Ansix923"],"mappings":"AAAA;;AAAE,WAAUA,IAAV,EAAgBC,OAAhB,EAAyBC,KAAzB,EAAgC;AACjC,MAAI,OAAOC,OAAP,KAAmB,QAAvB,EAAiC;AAEhCC,IAAAA,MAAM,CAACD,OAAP,GAAiBA,OAAO,GAAGF,OAAO,CAACI,OAAO,UAAR,EAAoBA,OAAO,iBAA3B,CAAlC;AACA,GAHD,MAIK,IAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAEpDD,IAAAA,MAAM,CAAC,CAAC,QAAD,EAAW,eAAX,CAAD,EAA8BL,OAA9B,CAAN;AACA,GAHI,MAIA;AAEJA,IAAAA,OAAO,CAACD,IAAI,CAACQ,QAAN,CAAP;AACA;AACD,CAbC,EAaA,IAbA,EAaM,UAAUA,QAAV,EAAoB;AAK3BA,EAAAA,QAAQ,CAACC,GAAT,CAAaC,QAAb,GAAwB;AACpBD,IAAAA,GAAG,EAAE,aAAUE,IAAV,EAAgBC,SAAhB,EAA2B;AAE5B,UAAIC,YAAY,GAAGF,IAAI,CAACG,QAAxB;AACA,UAAIC,cAAc,GAAGH,SAAS,GAAG,CAAjC;AAGA,UAAII,aAAa,GAAGD,cAAc,GAAGF,YAAY,GAAGE,cAApD;AAGA,UAAIE,WAAW,GAAGJ,YAAY,GAAGG,aAAf,GAA+B,CAAjD;AAGAL,MAAAA,IAAI,CAACO,KAAL;AACAP,MAAAA,IAAI,CAACQ,KAAL,CAAWF,WAAW,KAAK,CAA3B,KAAiCD,aAAa,IAAK,KAAMC,WAAW,GAAG,CAAf,GAAoB,CAA5E;AACAN,MAAAA,IAAI,CAACG,QAAL,IAAiBE,aAAjB;AACH,KAhBmB;AAkBpBI,IAAAA,KAAK,EAAE,eAAUT,IAAV,EAAgB;AAEnB,UAAIK,aAAa,GAAGL,IAAI,CAACQ,KAAL,CAAYR,IAAI,CAACG,QAAL,GAAgB,CAAjB,KAAwB,CAAnC,IAAwC,IAA5D;AAGAH,MAAAA,IAAI,CAACG,QAAL,IAAiBE,aAAjB;AACH;AAxBmB,GAAxB;AA4BA,SAAOR,QAAQ,CAACC,GAAT,CAAaY,QAApB;AAEA,CAhDC,CAAD","sourcesContent":[";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));"]},"metadata":{},"sourceType":"script"}